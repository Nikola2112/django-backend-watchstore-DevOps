version: '3.8'

services:
  backend_rds:
    build:
      context: .
      dockerfile: backend_rds/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=backend_rds.settings
      - DB_NAME=${DB_NAME}        # Используйте переменные окружения из .env
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    depends_on:
      - db
    networks:
      - backend

  backend_redis:
    build:
      context: .
      dockerfile: backend_redis/Dockerfile
    ports:
      - "8001:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=backend_redis.settings
      - REDIS_HOST=${REDIS_HOST}   # Используйте переменные окружения из .env
      - REDIS_PORT=${REDIS_PORT}
    depends_on:
      - redis
    networks:
      - backend

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "80:80"
    networks:
      - frontend

  db:
    image: postgres:13
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - backend

volumes:
  postgres_data:

networks:
  backend:
  frontend:
